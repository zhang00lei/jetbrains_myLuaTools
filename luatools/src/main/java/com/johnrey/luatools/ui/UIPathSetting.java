package com.johnrey.luatools.ui;

import cn.hutool.core.io.FileUtil;
import com.intellij.ide.util.PropertiesComponent;
import com.intellij.openapi.project.Project;
import com.intellij.openapi.ui.Messages;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class UIPathSetting extends JDialog {
    public static final String PATH_CONFIG_KEY = "PathConfig";
    private PropertiesComponent propertiesComponent = PropertiesComponent.getInstance();

    private JPanel mainPanel;
    private JTextArea taPathInfo;
    private JButton btnConfirm;
    private JButton btnCancel;
    private Project project;

    public UIPathSetting() {
        setContentPane(mainPanel);
        setModal(true);
        setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        pack();
        setLocationRelativeTo(null);

        btnConfirm.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                saveConfig();
            }
        });
        btnCancel.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
            }
        });
    }

    public void setEnable(Project project, boolean enable) {
        this.project = project;
        String pathTemp = propertiesComponent.getValue(PATH_CONFIG_KEY, "");
        taPathInfo.setText(pathTemp);
        setVisible(enable);
    }

    private void saveConfig() {
        String[] dirPath = taPathInfo.getText().split("\n");
        for (String path : dirPath) {
            if (!FileUtil.exist(path)) {
                Messages.showMessageDialog(project, "路径输入有误，请检查", "提示", Messages.getInformationIcon());
                return;
            }
        }
        propertiesComponent.setValue(PATH_CONFIG_KEY, taPathInfo.getText());

        dispose();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(2, 2, new Insets(5, 5, 5, 5), -1, -1));
        mainPanel.setMaximumSize(new Dimension(420, 400));
        mainPanel.setMinimumSize(new Dimension(420, 400));
        mainPanel.setPreferredSize(new Dimension(420, 400));
        mainPanel.setBorder(BorderFactory.createTitledBorder(null, "输入要格式化目录的绝对路径", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        taPathInfo = new JTextArea();
        taPathInfo.setText("");
        mainPanel.add(taPathInfo, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        btnConfirm = new JButton();
        btnConfirm.setText("确定");
        mainPanel.add(btnConfirm, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnCancel = new JButton();
        btnCancel.setText("取消");
        mainPanel.add(btnCancel, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
